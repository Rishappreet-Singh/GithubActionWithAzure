name: 'resource-for-azure'

on: [workflow_dispatch]
# on: push
permissions: write-all

jobs:
  ARM:
    name: 'Azure-env'
    runs-on: ubuntu-latest
    environment: production
    env: 
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "ap-southeast-1"    

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

#     - name: Azure-connect
#       uses: azure/login@v1
#       with: 
#         creds: ${{secrets.AZURE_CREDS}}
    - name: Azure-connect
      run: az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
#     - name: Run Arm
#       uses: azure/arm-deploy@v1
#       with: 
#         subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
#         resourceGroupName: ${{ secrets.AZURE_RG }}
#         template: ./v-net.json
#     - name: Azure run
#       run : |
#         az network vnet create \
#         --name v-netber \
#         --resource-group user_KPLMMZYKUL_ResourceGroup \
#         --subnet-name subnet-1 --subnet-prefixes 10.0.1.0/24
  
    - name: Terraform Init
      run: terraform init -backend-config=conf.tfvars
#       run: terraform init -backend-config="access_key=${{secrets.AWS_ACCESS_KEY}}" -backend-config="secret_key=${{secrets.AWS_SECRET_ACCESS_KEY}}" -backend-config=conf.tfvars
    
    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false
      continue-on-error: true
      
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: "exit 1"
    
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false

#     - name: Function Creation
#       run: |
#         python -m venv .venv
#         source .venv/bin/activate
#         npm install -g azure-functions-core-tools@4 --unsafe-perm true
#         func init LocalFunctionProj --python
#         cd LocalFunctionProj
#         func new --name Servicebuser --template "Azure Service Bus Queue trigger"


#         # for output
#         func templates list -l python

#         func start hello
#         func azure functionapp publish linux-function-app-for-azure 
      

